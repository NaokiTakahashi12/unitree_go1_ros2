<?xml version="1.0"?>
<!-- This Source Code Form is subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this
   - file, You can obtain one at https://mozilla.org/MPL/2.0/. -->
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
  <gazebo>
    <xacro:if value="$(arg use_gz)">
      <plugin filename="ignition-gazebo-joint-state-publisher-system" name="ignition::gazebo::systems::JointStatePublisher"/>
      <plugin filename="ignition-gazebo-contact-system" name="ignition::gazebo::systems::Contact"/>
      <plugin filename="ignition-gazebo-forcetorque-system" name="ignition::gazebo::systems::ForceTorque"/>
      <plugin filename="ignition-gazebo-imu-system" name="ignition::gazebo::systems::Imu"/>
      <xacro:if value="$(arg enable_sensors_plugin)">
        <plugin filename="ignition-gazebo-sensors-system" name="ignition::gazebo::systems::Sensors"/>
      </xacro:if>
    </xacro:if>
    <xacro:unless value="$(arg use_gz)">
      <!-- ros_control plugin -->
      <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
        <robotNamespace>/go1_gazebo</robotNamespace>
        <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
      </plugin>
      <!-- Show the trajectory of trunk center. -->
      <plugin name="3dplot" filename="libLinkPlot3DPlugin.so">
        <frequency>10</frequency>
        <plot>
          <link>base_link</link>
          <pose>0 0 0 0 0 0</pose>
          <material>Gazebo/Yellow</material>
        </plot>
      </plugin>
      <!-- Show the trajectory of foot. You can add another trajectory about another foot. -->
      <plugin name="3dplot" filename="libLinkPlot3DPlugin.so">
        <frequency>100</frequency>
        <plot>
          <link>FL_foot</link>
          <pose>0 0 0 0 0 0</pose>
          <material>Gazebo/Green</material>
        </plot>
      </plugin>
      <plugin filename="libgazebo_ros_force.so" name="gazebo_ros_force">
        <bodyName>trunk</bodyName>
        <topicName>/apply_force/trunk</topicName>
      </plugin>
    </xacro:unless>
  </gazebo>
  <gazebo reference="imu_link">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <pose>0 0 0 0 0 0</pose>
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>false</visualize>
      <xacro:unless value="$(arg use_gz)">
        <topic>__default_topic__</topic>
        <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
          <topicName>trunk_imu</topicName>
          <bodyName>imu_link</bodyName>
          <updateRateHZ>100.0</updateRateHZ>
          <gaussianNoise>0.0</gaussianNoise>
          <xyzOffset>0 0 0</xyzOffset>
          <rpyOffset>0 0 0</rpyOffset>
          <frameName>imu_link</frameName>
        </plugin>
      </xacro:unless>
      <imu>
        <angular_velocity>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>0.125</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>0.125</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>0.2</stddev>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>0.125</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>0.125</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>0.2</stddev>
            </noise>
          </z>
        </linear_acceleration>
      </imu>
    </sensor>
  </gazebo>
  <gazebo reference="base_link">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <gazebo reference="trunk">
    <mu1>
      ${default_link_mu1}
    </mu1>
    <mu2>
      ${default_link_mu2}
    </mu2>
    <kp value="${leg_link_kp}"/>
    <kd value="${leg_link_kd}"/>
  </gazebo>
  <gazebo reference="stick_link">
    <mu1>
      ${default_link_mu1}
    </mu1>
    <mu2>
      ${default_link_mu2}
    </mu2>
  </gazebo>
  <xacro:macro name="leg_gazebo_configulation" params="name">
    <gazebo reference="${name}_hip">
      <mu1>
        ${default_link_mu1}
      </mu1>
      <mu2>
        ${default_link_mu2}
      </mu2>
      <kp value="${leg_link_kp}"/>
      <kd value="${leg_link_kd}"/>
      <self_collide>
        ${enable_self_collision_check}
      </self_collide>
      <xacro:if value="$(arg use_gz)">
      </xacro:if>
      <xacro:unless value="$(arg use_gz)">
      </xacro:unless>
    </gazebo>
    <gazebo reference="${name}_thigh_shoulder">
      <mu1>
        ${default_link_mu1}
      </mu1>
      <mu2>
        ${default_link_mu2}
      </mu2>
      <kp value="${leg_link_kp}"/>
      <kd value="${leg_link_kd}"/>
      <self_collide>
        ${enable_self_collision_check}
      </self_collide>
      <xacro:if value="$(arg use_gz)">
      </xacro:if>
      <xacro:unless value="$(arg use_gz)">
      </xacro:unless>
    </gazebo>
    <gazebo reference="${name}_thigh">
      <mu1>
        ${default_link_mu1}
      </mu1>
      <mu2>
        ${default_link_mu2}
      </mu2>
      <kp value="${leg_link_kp}"/>
      <kd value="${leg_link_kd}"/>
      <self_collide>
        ${enable_self_collision_check}
      </self_collide>
      <xacro:if value="$(arg use_gz)">
      </xacro:if>
      <xacro:unless value="$(arg use_gz)">
      </xacro:unless>
    </gazebo>
    <gazebo reference="${name}_calf">
      <mu1>
        ${default_link_mu1}
      </mu1>
      <mu2>
        ${default_link_mu2}
      </mu2>
      <kp value="${leg_link_kp}"/>
      <kd value="${leg_link_kd}"/>
      <self_collide>
        ${enable_self_collision_check}
      </self_collide>
      <!-- Foot contacts. -->
      <sensor name="${name}_foot_contact" type="contact">
        <update_rate>100</update_rate>
        <always_on>true</always_on>
        <visualize>false</visualize>
        <xacro:unless value="$(arg use_gz)">
          <plugin name="contactPlugin" filename="libunitreeFootContactPlugin.so"/>
        </xacro:unless>
        <contact>
          <collision>
            ${name}_calf_fixed_joint_lump__${name}_foot_collision_1
          </collision>
        </contact>
      </sensor>
      <xacro:if value="$(arg use_gz)">
      </xacro:if>
      <xacro:unless value="$(arg use_gz)">
      </xacro:unless>
    </gazebo>
    <gazebo reference="${name}_foot">
      <mu1>
        ${foot_link_mu1}
      </mu1>
      <mu2>
        ${foot_link_mu2}
      </mu2>
      <kp value="${leg_link_kp}"/>
      <kd value="${leg_link_kd}"/>
      <self_collide>
        ${enable_self_collision_check}
      </self_collide>
      <xacro:if value="$(arg use_gz)">
      </xacro:if>
      <xacro:unless value="$(arg use_gz)">
        <!-- Visualization of Foot contacts. -->
        <visual>
          <plugin name="drawForcePlugin" filename="libunitreeDrawForcePlugin.so">
            <topicName>${name}_foot_contact</topicName>
          </plugin>
        </visual>
      </xacro:unless>
    </gazebo>
    <gazebo reference="${name}_hip_joint">
      <sensor name="${name}_thigh_torque_sensor" type="force_torque">
        <update_rate>50</update_rate>
      </sensor>
    </gazebo>
    <gazebo reference="${name}_thigh_joint">
      <sensor name="${name}_thigh_torque_sensor" type="force_torque">
        <update_rate>50</update_rate>
      </sensor>
    </gazebo>
    <gazebo reference="${name}_calf_joint">
      <sensor name="${name}_thigh_torque_sensor" type="force_torque">
        <update_rate>50</update_rate>
      </sensor>
    </gazebo>
  </xacro:macro>
  <xacro:macro name="depth_camera_gazebo_configulation" params="name">
    <gazebo reference="camera_${name}">
      <sensor name="camera_${name}_camera" type="rgbd_camera">
        <update_rate>16</update_rate>
        <camera>
          <horizontal_fov>2.094</horizontal_fov>
          <xacro:if value="$(arg enable_low_resolution_depth)">
            <image>
              <width>116</width>
              <height>100</height>
              <format>R8G8B8</format>
            </image>
          </xacro:if>
          <xacro:unless value="$(arg enable_low_resolution_depth)">
            <image>
              <width>928</width>
              <height>800</height>
              <format>R8G8B8</format>
            </image>
          </xacro:unless>
          <clip>
            <near>0.15</near>
            <far>5</far>
          </clip>
          <noise>
            <mean>0.0</mean>
            <stddev>0.075</stddev>
            <type>gaussian</type>
          </noise>
        </camera>
        <xacro:unless value="$(arg use_gz)">
          <plugin name="camera_${name}_controller" filename="libgazebo_ros_openni_kinect.so">
            <baseline>0.025</baseline>
            <alwaysOn>true</alwaysOn>
            <updateRate>0.0</updateRate>
            <cameraName>camera_${name}_ir</cameraName>
            <imageTopicName>/camera_${name}/color/image_raw</imageTopicName>
            <cameraInfoTopicName>/camera_${name}/color/camera_info</cameraInfoTopicName>
            <depthImageTopicName>/camera_${name}/depth/image_raw</depthImageTopicName>
            <depthImageInfoTopicName>/camera_${name}/depth/camera_info</depthImageInfoTopicName>
            <!-- <pointCloudTopicName>/camera_${name}/depth/points</pointCloudTopicName> -->
            <pointCloudTopicName>/cam${camID}/point_cloud_${name}</pointCloudTopicName>
            <frameName>camera_optical_${name}</frameName>
            <pointCloudCutoff>0.1</pointCloudCutoff>
            <pointCloudCutoffMax>1.5</pointCloudCutoffMax>
            <distortionK1>0.0</distortionK1>
            <distortionK2>0.0</distortionK2>
            <distortionK3>0.0</distortionK3>
            <distortionT1>0.0</distortionT1>
            <distortionT2>0.0</distortionT2>
            <CxPrime>0</CxPrime>
            <Cx>0.0045</Cx>
            <Cy>0.0039</Cy>
            <focalLength>0</focalLength>
            <hackBaseline>0</hackBaseline>
          </plugin>
        </xacro:unless>
      </sensor>
    </gazebo>
  </xacro:macro>
  <xacro:macro name="ultrasound_gazebo_configulation" params="name">
    <gazebo reference="ultraSound_${name}">
      <sensor name="ultrasound_${name}_sensor" type="gpu_lidar">
        <always_on>true</always_on>
        <update_rate>30</update_rate>
        <visualize>false</visualize>
        <lidar>
          <scan>
            <horizontal>
              <samples>1</samples>
              <resolution>1</resolution>
              <min_angle>0</min_angle>
              <max_angle>0</max_angle>
            </horizontal>
            <vertical>
              <samples>1</samples>
              <resolution>1</resolution>
              <min_angle>-0.018</min_angle>
              <max_angle>0.018</max_angle>
            </vertical>
          </scan>
          <range>
            <min>0.1</min>
            <max>3</max>
            <resolution>0.01</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.1</mean>
            <stddev>0.05</stddev>
          </noise>
        </lidar>
      </sensor>
    </gazebo>
  </xacro:macro>
</robot>
